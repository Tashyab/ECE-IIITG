C51 COMPILER V9.60.7.0   USER_MENU                                                         04/16/2024 13:52:20 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE USER_MENU
OBJECT MODULE PLACED IN .\Objects\user_menu.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE user_menu.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\user_menu.lst) TABS(2) OBJECT(.\Objects\user_menu.obj)

line level    source

   1          //User Menu
   2          
   3          #include <reg51.h>
   4          
   5          #define lcd_data P1
   6          
   7          int i=0;
   8          sbit rs=P0^0;
   9          sbit en=P0^2;
  10          
  11          void msdelay(int);
  12          void LCD_cmd(unsigned char);
  13          void LCD_char(char);
  14          void LCD_string(char*);
  15          void LCD_init(void);
  16          void UART_Init();
  17          void UART_SendChar(char);
  18          char UART_ReceiveChar();
  19          void rightshift(int);
  20          
  21          void msdelay(int ms)
  22          {
  23   1        
  24   1        for(i=0;i<ms;i++)
  25   1        {
  26   2          TH0 = 0xFC;
  27   2          TL0 = 0x18;
  28   2          TR0 = 1;
  29   2        
  30   2          while(TF0 != 1);
  31   2          TR0 = 0;
  32   2          TF0 = 0;
  33   2        }
  34   1      }
  35          void LCD_cmd(unsigned char a)
  36          {
  37   1        lcd_data = a;
  38   1        rs = 0;
  39   1        en = 1;
  40   1        msdelay(1);
  41   1        en = 0;
  42   1        msdelay(5);
  43   1      }
  44          
  45          void LCD_char(char a)
  46          {
  47   1          lcd_data = a;
  48   1          rs = 1;
  49   1          en = 1;
  50   1          msdelay(2);
  51   1          en= 0;
  52   1        msdelay(5);
  53   1      }
  54          
C51 COMPILER V9.60.7.0   USER_MENU                                                         04/16/2024 13:52:20 PAGE 2   

  55          void LCD_string(char *s)
  56          {
  57   1        while(*s)
  58   1        {
  59   2          LCD_char(*s++);
  60   2        }
  61   1      }
  62          
  63          void LCD_init(void)
  64          {
  65   1        TMOD=0x21;
  66   1        msdelay(20);
  67   1        LCD_cmd(0x38);
  68   1        LCD_cmd(0x0C);
  69   1        LCD_cmd(0x06);
  70   1        LCD_cmd(0x01);
  71   1        LCD_cmd(0x80);
  72   1      }
  73          
  74          void UART_Init() {
  75   1          TH1 = 0xFA;
  76   1          TR1 = 1;
  77   1          SCON = 0x50;
  78   1      }
  79          
  80          void UART_SendChar(unsigned char c) {
  81   1          SBUF = c;
  82   1          while (!TI);    
  83   1          TI = 0;
  84   1      }
  85          void UART_SendChar_string(unsigned char *d)
  86          {
  87   1        while(*d){
  88   2          UART_SendChar(*d++);
  89   2        }
  90   1      }
  91          char UART_ReceiveChar() {
  92   1          unsigned char OUT;
  93   1          while (!RI);    
  94   1          RI = 0; 
  95   1          OUT=SBUF; 
  96   1          return OUT;
  97   1      }
  98          void rightshift(int t){
  99   1        while(t--){
 100   2          LCD_cmd(0x1C);
 101   2        }
 102   1      }
 103          void main() {
 104   1          unsigned char receivedChar;
 105   1          LCD_init();
 106   1          while (1){
 107   2          UART_Init(); 
 108   2              receivedChar = UART_ReceiveChar();
 109   2              msdelay(5);
 110   2          if(receivedChar=='A'){
 111   3            UART_SendChar_string("A");
 112   3            LCD_cmd(0x01);
 113   3                LCD_string("IIITG");
 114   3            rightshift(4);
 115   3          }
 116   2          else if(receivedChar=='B'){
C51 COMPILER V9.60.7.0   USER_MENU                                                         04/16/2024 13:52:20 PAGE 3   

 117   3            UART_SendChar_string("B");
 118   3            LCD_cmd(0x01);
 119   3                LCD_string("2101214");
 120   3            rightshift(4);
 121   3          }
 122   2          else if(receivedChar=='C'){
 123   3            UART_SendChar_string("C");
 124   3            LCD_cmd(0x01);
 125   3                LCD_string("09/10/2002");
 126   3            rightshift(4);
 127   3          }
 128   2          else {
 129   3            UART_SendChar_string("Incorrect option!!");
 130   3            LCD_cmd(0x01);
 131   3          }
 132   2          }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    367    ----
   CONSTANT SIZE    =     50    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
